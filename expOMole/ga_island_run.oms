
val nbAdultFemale = Val[Double]
val coeffLarve = Val[Double]
val coeffOeuf = Val[Double]
val coeffNymphe = Val[Double]
val avgEggBSSurface = Val[Double]
val uLambda = Val[Double]
val aLambda = Val[Double]
val bLambda = Val[Double]
val distGitesout = Val[Double]
val globalError = Val[Double]
val total_local_error = Val[Double]
val scenario = Val[Double]

val seed = Val[Long]

//EGIAuthentication() = P12Certificate(encrypted, "/iscpif/users/rey/CERTIF/certificats-grille-201617.p12")

//val gama =   GamaTask( "/home/reyman/Projets/moma_env/", "models/moma_mode_pieges_renaud.gaml", "MOMAFly", 48960) set (
val gama = GamaTask( "/iscpif/users/rey/REPOSITORY_GIT/moma_mode", "models/moma_mode_pieges_renaud.gaml", "MOMAFly", 48960) set (
    gamaInputs += (nbAdultFemale, "NB_ADULT_FEMALE"),
    gamaInputs += (coeffLarve, "coeff_larve"),
    gamaInputs += (coeffOeuf, "coeff_oeuf"),
    gamaInputs += (coeffNymphe, "coeff_nymphe"),
    gamaInputs += (avgEggBSSurface, "AVG_EGG_BSSURFACE"),
    gamaInputs += (uLambda, "u_lambda"),
    gamaInputs += (aLambda, "a_lambda"),
    gamaInputs += (bLambda, "b_lambda"),
    gamaInputs += (distGitesout, "dist_gitesout"),
    gamaInputs += (scenario, "scenario"),
    
    gamaSeed := seed,
    gamaVariableOutputs += ("global_error", globalError),
    gamaVariableOutputs += ("total_local_error", total_local_error) 
  )

val evolution =
  SteadyStateEvolution(
    algorithm =   
      NSGA2(
        mu = 200, 
        genome = Seq(nbAdultFemale in (100.0, 1000.0), 
        coeffLarve in (1.0, 20.0),
        coeffOeuf in (1.0, 20.0),
        coeffNymphe in (1.0, 20.0),
        avgEggBSSurface in (10.0, 400.0),
        uLambda in (1.0, 10.0),
        aLambda in (1.0, 15.0),
        bLambda in (1.0, 10.0),
        distGitesout in (1.0, 100.0),
        scenario in (1.0, 5.0)),
        objectives = Seq(total_local_error),
        replication = Replication(seed = seed, aggregation = Seq(median), max = 100)
      ),
    evaluation = gama,
    termination = 200000,
    parallelism = 500
  )

val savePopulationHook = SavePopulationHook(evolution, "/iscpif/users/rey/REPOSITORY_GIT/moma_mode/results/calibration/")
val env = EGIEnvironment("vo.complex-systems.eu")

(evolution on env hook savePopulationHook)